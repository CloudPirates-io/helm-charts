{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "ClusterPirate Helm Chart Values Schema",
  "description": "Schema for ClusterPirate Helm chart values",
  "properties": {
    "commonLabels": {
      "type": "object",
      "title": "Common Labels",
      "description": "Common labels applied to all resources",
      "additionalProperties": {
        "type": "string"
      }
    },
    "commonAnnotations": {
      "type": "object",
      "title": "Common Annotations",
      "description": "Common annotations applied to all resources",
      "additionalProperties": {
        "type": "string"
      }
    },
    "imagePullSecrets": {
      "type": "array",
      "items": {
        "type": ["string", "object"],
        "properties": {
          "name": { "type": "string" }
        },
        "required": ["name"]
      }
    },
    "image": {
      "type": "object",
      "title": "ClusterPirate Image Configuration",
      "description": "Container image settings for ClusterPirate",
      "properties": {
        "registry": {
          "type": "string",
          "title": "Image Registry",
          "description": "ClusterPirate image registry"
        },
        "repository": {
          "type": "string",
          "title": "Image Repository",
          "description": "ClusterPirate image repository"
        },
        "tag": {
          "type": "string",
          "title": "Image Tag",
          "description": "ClusterPirate image tag with digest"
        },
        "imagePullPolicy": {
          "type": "string",
          "title": "Image Pull Policy",
          "description": "ClusterPirate image pull policy",
          "enum": ["Always", "Never", "IfNotPresent"]
        }
      }
    },
    "deployment": {
      "type": "object",
      "title": "Deployment Configuration",
      "description": "Configuration for the ClusterPirate deployment",
      "properties": {
        "resources": {
          "type": "object",
          "title": "Pod Resource Configuration",
          "description": "Pod resource limits and requests",
          "properties": {
            "limits": {
              "type": "object",
              "title": "Resource Limits",
              "description": "Resource limits for the container",
              "properties": {
                "cpu": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "title": "CPU Limit",
                  "description": "CPU resource limit"
                },
                "memory": {
                  "type": "string",
                  "title": "Memory Limit",
                  "description": "Memory resource limit"
                }
              }
            },
            "requests": {
              "type": "object",
              "title": "Resource Requests",
              "description": "Resource requests for the container",
              "properties": {
                "cpu": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "title": "CPU Request",
                  "description": "CPU resource request"
                },
                "memory": {
                  "type": "string",
                  "title": "Memory Request",
                  "description": "Memory resource request"
                }
              }
            }
          }
        },
        "extraEnvVars": {
          "type": "array",
          "title": "Extra Environment Variables",
          "description": "Additional environment variables",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "title": "Variable Name",
                "description": "Environment variable name"
              },
              "value": {
                "type": "string",
                "title": "Variable Value",
                "description": "Environment variable value"
              },
              "valueFrom": {
                "type": "object",
                "title": "Value From",
                "description": "Source for the environment variable value"
              }
            },
            "required": ["name"]
          }
        },
        "probes": {
          "type": "object",
          "title": "Health Probe Configuration",
          "description": "Health probe settings",
          "properties": {
            "livenessProbe": {
              "type": "object",
              "title": "Liveness Probe",
              "description": "Liveness probe configuration",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "title": "Enable Liveness Probe",
                  "description": "Enable liveness probe"
                },
                "initialDelaySeconds": {
                  "type": "integer",
                  "title": "Initial Delay Seconds",
                  "description": "Initial delay seconds for liveness probe",
                  "minimum": 0
                },
                "periodSeconds": {
                  "type": "integer",
                  "title": "Period Seconds",
                  "description": "Period seconds for liveness probe",
                  "minimum": 1
                },
                "timeoutSeconds": {
                  "type": "integer",
                  "title": "Timeout Seconds",
                  "description": "Timeout seconds for liveness probe",
                  "minimum": 1
                },
                "failureThreshold": {
                  "type": "integer",
                  "title": "Failure Threshold",
                  "description": "Failure threshold for liveness probe",
                  "minimum": 1
                },
                "successThreshold": {
                  "type": "integer",
                  "title": "Success Threshold",
                  "description": "Success threshold for liveness probe",
                  "minimum": 1
                }
              }
            },
            "readinessProbe": {
              "type": "object",
              "title": "Readiness Probe",
              "description": "Readiness probe configuration",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "title": "Enable Readiness Probe",
                  "description": "Enable readiness probe"
                },
                "initialDelaySeconds": {
                  "type": "integer",
                  "title": "Initial Delay Seconds",
                  "description": "Initial delay seconds for readiness probe",
                  "minimum": 0
                },
                "periodSeconds": {
                  "type": "integer",
                  "title": "Period Seconds",
                  "description": "Period seconds for readiness probe",
                  "minimum": 1
                },
                "timeoutSeconds": {
                  "type": "integer",
                  "title": "Timeout Seconds",
                  "description": "Timeout seconds for readiness probe",
                  "minimum": 1
                },
                "failureThreshold": {
                  "type": "integer",
                  "title": "Failure Threshold",
                  "description": "Failure threshold for readiness probe",
                  "minimum": 1
                },
                "successThreshold": {
                  "type": "integer",
                  "title": "Success Threshold",
                  "description": "Success threshold for readiness probe",
                  "minimum": 1
                }
              }
            }
          }
        }
      }
    },
    "clusterPirate": {
      "type": "object",
      "title": "ClusterPirate Application Configuration",
      "description": "ClusterPirate specific configuration",
      "properties": {
        "logLevel": {
          "type": "string",
          "title": "Log Level",
          "description": "Application logging level",
          "enum": ["debug", "info", "warn", "error", "fatal"]
        },
        "healthPort": {
          "type": "integer",
          "title": "Health Port",
          "description": "Health check server port",
          "minimum": 1,
          "maximum": 65535
        },
        "metrics": {
          "type": "object",
          "title": "Metrics Configuration",
          "description": "Metrics collection configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enable Metrics",
              "description": "Enable/disable metrics collection"
            },
            "updateIntervalSeconds": {
              "type": "integer",
              "title": "Update Interval",
              "description": "Interval in seconds for metrics updates",
              "minimum": 1
            },
            "cache": {
              "type": "object",
              "title": "Cache Configuration",
              "description": "Metrics caching configuration using Valkey",
              "properties": {
                "host": {
                  "type": "string",
                  "title": "Valkey Host",
                  "description": "Valkey server hostname or IP address"
                },
                "port": {
                  "type": "integer",
                  "title": "Valkey Port",
                  "description": "Valkey server port",
                  "minimum": 1,
                  "maximum": 65535
                },
                "password": {
                  "type": "string",
                  "title": "Valkey Password",
                  "description": "Valkey authentication password"
                },
                "ttl": {
                  "type": "integer",
                  "title": "Cache TTL",
                  "description": "Time-to-live for cached metrics in seconds",
                  "minimum": 1
                }
              }
            }
          }
        },
        "monitoring": {
          "type": "object",
          "title": "Monitoring Configuration",
          "description": "Kubernetes resource monitoring configuration",
          "properties": {
            "resourceEventsEnabled": {
              "type": "boolean",
              "title": "Enable Resource Events",
              "description": "Enable monitoring of Kubernetes resources"
            },
            "systemEventsEnabled": {
              "type": "boolean",
              "title": "Enable System Events",
              "description": "Enable monitoring of Kubernetes system events"
            }
          }
        }
      }
    },
    "cloudpiratesApi": {
      "type": "object",
      "title": "CloudPirates API Configuration",
      "description": "CloudPirates API settings",
      "properties": {
        "registerEndpoint": {
          "type": "string",
          "title": "Register Endpoint",
          "description": "API endpoint for cluster registration",
          "format": "uri"
        }
      }
    },
    "auth": {
      "type": "object",
      "title": "Authentication Configuration",
      "description": "Authentication settings",
      "properties": {
        "accessToken": {
          "type": "string",
          "title": "Access Token",
          "description": "Inline access token"
        },
        "existingSecret": {
          "type": "string",
          "title": "Existing Secret",
          "description": "Name of existing secret containing the access token"
        },
        "existingSecretAccessTokenKey": {
          "type": "string",
          "title": "Existing Secret Access Token Key",
          "description": "Key within the existing secret that contains the access token"
        }
      }
    },
    "rbac": {
      "type": "object",
      "title": "RBAC Configuration",
      "description": "RBAC settings",
      "properties": {
        "create": {
          "type": "boolean",
          "title": "Create RBAC",
          "description": "Whether to create RBAC resources"
        }
      }
    },
    "serviceAccount": {
      "type": "object",
      "title": "Service Account Configuration",
      "description": "Service account settings",
      "properties": {
        "create": {
          "type": "boolean",
          "title": "Create Service Account",
          "description": "Whether to create a service account"
        },
        "name": {
          "type": "string",
          "title": "Service Account Name",
          "description": "Name of the service account to create or use"
        }
      }
    },
    "valkey": {
      "type": "object",
      "title": "Valkey Configuration",
      "description": "Valkey dependency configuration",
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enable Valkey",
          "description": "Enable/disable Valkey installation as a dependency"
        },
        "persistence": {
          "type": "object",
          "title": "Valkey persistence settings",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enable persistence"
            }
          }
        },
        "auth": {
          "type": "object",
          "title": "Valkey Authentication",
          "description": "Valkey authentication configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enable Auth",
              "description": "Enable/disable password authentication for Valkey"
            },
            "password": {
              "type": "string",
              "title": "Password",
              "description": "Valkey password"
            },
            "existingSecret": {
              "type": "string",
              "title": "Existing Secret",
              "description": "Name of existing secret containing the Valkey password"
            },
            "existingSecretPasswordKey": {
              "type": "string",
              "title": "Existing Secret Password Key",
              "description": "Key within the existing secret that contains the password"
            }
          }
        }
      }
    }
  }
}
