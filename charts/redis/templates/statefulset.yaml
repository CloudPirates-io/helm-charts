apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
  {{- with (include "redis.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ include "redis.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "redis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "redis.selectorLabels" . | nindent 8 }}
    spec:
{{- with (include "redis.imagePullSecrets" .) }}
{{ . | nindent 6 }}
{{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext: {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          image: {{ include "redis.image" . | quote }}
          imagePullPolicy: {{ include "common.imagePullPolicy" (dict "image" .Values.image) }}
          {{- if .Values.auth.enabled }}
          command:
            - /bin/sh
            - -c
            - redis-server {{ include "redis.configFullName" . }} --requirepass "${REDIS_PASSWORD}"
          {{- else }}
          command:
            - /bin/sh
            - -c
            - redis-server {{ include "redis.configFullName" . }}
          {{- end }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          {{- if or .Values.auth.enabled .Values.extraEnv }}
          env:
            {{- if .Values.auth.enabled }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "redis.secretName" . }}
                  key: {{ include "redis.secretPasswordKey" . }}
            {{- end }}
            {{- range .Values.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                {{- if .Values.auth.enabled }}
                - redis-cli -a ${REDIS_PASSWORD} ping
                {{- else }}
                - redis-cli -a ${REDIS_PASSWORD} ping
                {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                {{- if .Values.auth.enabled }}
                - redis-cli -a ${REDIS_PASSWORD} ping
                {{- else }}
                - redis-cli -a ${REDIS_PASSWORD} ping
                {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if or .Values.config.content .Values.config.existingConfigmap }}
            - name: config
              mountPath: {{ .Values.config.mountPath }}
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
      volumes:
        {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        {{- end }}
        {{- if or .Values.config.content .Values.config.existingConfigmap }}
        - name: config
          configMap:
            {{- if .Values.config.existingConfigmap }}
            name: {{ .Values.config.existingConfigmap }}
            {{- else }}
            name: {{ include "redis.fullname" . }}-config
            {{- end }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        {{- with .Values.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}
