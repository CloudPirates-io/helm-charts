{{- include "mariadb.validateValues.auth" . }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mariadb.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "mariadb.labels" . | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  serviceName: {{ include "mariadb.fullname" . }}
  selector:
    matchLabels:
      {{- include "mariadb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mariadb.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
{{- with (include "mariadb.imagePullSecrets" .) }}
{{- . | nindent 6 }}
{{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.podSecurityContext.fsGroup }}
      {{- end }}
      containers:
        - name: mariadb
          image: {{ include "mariadb.image" . }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          securityContext: {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          {{- if or .Values.auth.enabled .Values.auth.database .Values.auth.username .Values.auth.allowEmptyRootPassword .Values.env }}
          env:
            {{- if and .Values.auth.enabled }}
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mariadb.secretName" . }}
                  key: {{ .Values.auth.secretKeys.rootPasswordKey }}
            {{- if .Values.auth.database }}
            - name: MARIADB_DATABASE
              value: {{ .Values.auth.database | quote }}
            {{- end }}
            {{- if .Values.auth.username }}
            - name: MARIADB_USER
              value: {{ .Values.auth.username | quote }}
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mariadb.secretName" . }}
                  key: {{ .Values.auth.secretKeys.userPasswordKey }}
            {{- end }}
            {{- end }}
            {{- if .Values.auth.allowEmptyRootPassword }}
            - name: MARIADB_ALLOW_EMPTY_ROOT_PASSWORD
              value: "1"
            {{- end }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - healthcheck.sh --connect --innodb_initialized
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - healthcheck.sh --connect --innodb_initialized
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            exec:
              command:
                - bash
                - -c
                - healthcheck.sh --connect --innodb_initialized
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - mountPath: /tmp
              name: tmp-volume
            {{- if or .Values.config.customConfiguration .Values.config.existingConfigMap }}
            - name: config
              mountPath: /etc/mysql/conf.d
            {{- end }}
      volumes:
        - name: tmp-volume
          emptyDir: {}
        {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        {{- end }}
        {{- if or .Values.config.customConfiguration .Values.config.existingConfigMap }}
        - name: config
          configMap:
            name: {{ include "mariadb.configMapName" . }}
        {{- end }}
        {{- range $secret := .Values.extraSecrets }}
        - name: {{ $secret.name }}
          secret:
            secretName: {{ $secret.name }}
            defaultMode: {{ $secret.defaultMode | default 0440 }}
        {{- end }}
        {{- range $config := .Values.extraConfigs }}
        - name: {{ $config.name }}
          configMap:
            name: {{ $config.name }}
            defaultMode: {{ $config.defaultMode | default 0440 }}
        {{- end }}
        {{- range $storage := .Values.extraVolumes }}
        - name: {{ $storage.name }}
          persistentVolumeClaim:
            claimName: {{ $storage.pvcName }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "mariadb.labels" . | nindent 10 }}
        {{- with .Values.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        {{- end }}
        {{- with .Values.persistence.selector }}
        selector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
  {{- end }}