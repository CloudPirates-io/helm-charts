suite: test container command and args overrides
templates:
  - statefulset.yaml
set:
  image:
    tag: 8.0.12@sha256:a6bda40d00e56682aeaa1bfc88e024b7dd755782c575c02760104fe02010f94f
tests:
  - it: should not have command field when image.command is not set
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].command

  - it: should not have args field when image.args is not set and no config is provided
    set:
      config:
        content: ""
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].args

  - it: should have default args when config.content is provided
    set:
      config:
        content: |
          systemLog:
            quiet: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[0]
          value: "--config"
      - equal:
          path: spec.template.spec.containers[0].args[1]
          value: "/etc/mongo/mongod.conf"

  - it: should have default args when config.existingConfigmap is provided
    set:
      config:
        content: ""
        existingConfigmap: "my-custom-configmap"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[0]
          value: "--config"
      - equal:
          path: spec.template.spec.containers[0].args[1]
          value: "/etc/mongo/mongod.conf"

  - it: should have custom config path when config.existingConfigmapKey is provided
    set:
      config:
        content: ""
        existingConfigmap: "my-custom-configmap"
        existingConfigmapKey: "custom-mongod.conf"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[0]
          value: "--config"
      - equal:
          path: spec.template.spec.containers[0].args[1]
          value: "/etc/mongo/custom-mongod.conf"

  - it: should override with custom command when image.command is set
    set:
      image:
        command:
          - "/bin/bash"
          - "-c"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].command[0]
          value: "/bin/bash"
      - equal:
          path: spec.template.spec.containers[0].command[1]
          value: "-c"

  - it: should override with custom args when image.args is set
    set:
      image:
        args:
          - "mongod"
          - "--bind_ip_all"
          - "--port"
          - "27017"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[0]
          value: "mongod"
      - equal:
          path: spec.template.spec.containers[0].args[1]
          value: "--bind_ip_all"
      - equal:
          path: spec.template.spec.containers[0].args[2]
          value: "--port"
      - equal:
          path: spec.template.spec.containers[0].args[3]
          value: "27017"

  - it: should prioritize image.args over default config args
    set:
      config:
        content: |
          systemLog:
            quiet: true
      image:
        args:
          - "mongod"
          - "--replSet"
          - "rs0"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[0]
          value: "mongod"
      - equal:
          path: spec.template.spec.containers[0].args[1]
          value: "--replSet"
      - equal:
          path: spec.template.spec.containers[0].args[2]
          value: "rs0"

  - it: should use both custom command and custom args when both are set
    set:
      image:
        command:
          - "/custom/entrypoint.sh"
        args:
          - "--debug"
          - "--verbose"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].command[0]
          value: "/custom/entrypoint.sh"
      - equal:
          path: spec.template.spec.containers[0].args[0]
          value: "--debug"
      - equal:
          path: spec.template.spec.containers[0].args[1]
          value: "--verbose"

  - it: should support single command entry
    set:
      image:
        command:
          - "mongod"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].command[0]
          value: "mongod"

  - it: should support single args entry
    set:
      image:
        args:
          - "--help"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[0]
          value: "--help"

  - it: should handle empty command array
    set:
      image:
        command: []
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].command

  - it: should handle empty args array
    set:
      config:
        content: ""
      image:
        args: []
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].args

  - it: should support template rendering in command
    set:
      image:
        command:
          - "/bin/sh"
          - "-c"
          - "echo 'Starting {{ .Chart.Name }}'"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].command[0]
          value: "/bin/sh"
      - equal:
          path: spec.template.spec.containers[0].command[1]
          value: "-c"
      - equal:
          path: spec.template.spec.containers[0].command[2]
          value: "echo 'Starting mongodb'"

  - it: should support template rendering in args
    set:
      image:
        args:
          - "mongod"
          - "--dbpath"
          - "{{ .Values.persistence.mountPath }}"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[0]
          value: "mongod"
      - equal:
          path: spec.template.spec.containers[0].args[1]
          value: "--dbpath"
      - equal:
          path: spec.template.spec.containers[0].args[2]
          value: "/data/db"

  - it: should work with complex command for debugging
    set:
      image:
        command:
          - "/bin/bash"
          - "-c"
          - |
            set -e
            echo "Starting MongoDB with debug mode"
            exec mongod --bind_ip_all
    asserts:
      - equal:
          path: spec.template.spec.containers[0].command[0]
          value: "/bin/bash"
      - equal:
          path: spec.template.spec.containers[0].command[1]
          value: "-c"
      - matchRegex:
          path: spec.template.spec.containers[0].command[2]
          pattern: ".*Starting MongoDB with debug mode.*"

  - it: should not affect other container properties when command is set
    set:
      image:
        command:
          - "mongod"
        pullPolicy: IfNotPresent
    asserts:
      - equal:
          path: spec.template.spec.containers[0].command[0]
          value: "mongod"
      - equal:
          path: spec.template.spec.containers[0].image
          value: docker.io/mongo:8.0.12@sha256:a6bda40d00e56682aeaa1bfc88e024b7dd755782c575c02760104fe02010f94f
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent

  - it: should not affect other container properties when args is set
    set:
      image:
        args:
          - "mongod"
      resources:
        limits:
          memory: 1Gi
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[0]
          value: "mongod"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 1Gi
