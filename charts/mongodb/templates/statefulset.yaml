apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mongodb.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
  {{- with (include "mongodb.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ include "mongodb.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mongodb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mongodb.selectorLabels" . | nindent 8 }}
    spec:
{{- with (include "mongodb.imagePullSecrets" .) }}
{{ . | nindent 6 }}
{{- end }}
      securityContext: {{ include "cloudpirates.renderPodSecurityContext" . | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext: {{ include "cloudpirates.renderContainerSecurityContext" . | nindent 12 }}
          image: {{ include "mongodb.image" . | quote }}
          imagePullPolicy: {{ include "cloudpirates.imagePullPolicy" (dict "image" .Values.image) }}
          {{- if or .Values.config.content .Values.config.existingConfigmap }}
          args:
            - "-f"
            - {{ include "mongodb.configFullName" . | quote }}
          {{- end }}
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          env:
            {{- if .Values.auth.enabled }}
            - name: MONGO_INITDB_ROOT_USERNAME
              value: {{ .Values.auth.rootUsername | quote }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mongodb.secretName" . }}
                  key: {{ include "mongodb.secretPasswordKey" . }}
            {{- end }}
            {{- if and .Values.customUser (or .Values.customUser.name .Values.customUser.existingSecret) }}
            - name: MONGO_CUSTOM_USERNAME
              valueFrom:
                secretKeyRef:
                  {{- if .Values.customUser.existingSecret }}
                  name: {{ .Values.customUser.existingSecret }}
                  {{- else }}
                  name: {{ include "mongodb.fullname" . }}-custom-user-secret
                  {{- end }}
                  {{- if and .Values.customUser.secretKeys .Values.customUser.secretKeys.name }}
                  key: {{ .Values.customUser.secretKeys.name }}
                  {{- else }}
                  key: CUSTOM_USER
                  {{- end }}
            - name: MONGO_CUSTOM_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.customUser.existingSecret }}
                  name: {{ .Values.customUser.existingSecret }}
                  {{- else }}
                  name: {{ include "mongodb.fullname" . }}-custom-user-secret
                  {{- end }}
                  {{- if and .Values.customUser.secretKeys .Values.customUser.secretKeys.password }}
                  key: {{ .Values.customUser.secretKeys.password }}
                  {{- else }}
                  key: CUSTOM_PASSWORD
                  {{- end }}
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                secretKeyRef:
                  {{- if .Values.customUser.existingSecret }}
                  name: {{ .Values.customUser.existingSecret }}
                  {{- else }}
                  name: {{ include "mongodb.fullname" . }}-custom-user-secret
                  {{- end }}
                  {{- if and .Values.customUser.secretKeys .Values.customUser.secretKeys.database }}
                  key: {{ .Values.customUser.secretKeys.database }}
                  {{- else }}
                  key: CUSTOM_DB
                  {{- end }}
            {{- end }}
            {{- if and .Values.metrics.enabled .Values.auth.enabled .Values.metrics.username }}
            - name: MONGO_METRICS_USERNAME
              value: {{ .Values.metrics.username | quote }}
            - name: MONGO_METRICS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mongodb.metrics.secretName" . }}
                  key: {{ include "mongodb.secretPasswordKey" . }}
            {{- end }}
            {{- range .Values.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d/
            {{- if or .Values.config.content .Values.config.existingConfigmap }}
            - name: config
              mountPath: /etc/mongo
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
{{- if .Values.metrics.enabled }}
        - name: metrics
          securityContext: {{ toYaml .Values.metrics.containerSecurityContext | nindent 12 }}
          image: {{ include "mongodb.metrics.image" . | quote }}
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          args:
            - --mongodb.uri={{ include "mongodb.metrics.connectionString" . }}
            - --web.listen-address=0.0.0.0:9216
            - --collect-all
            - --mongodb.direct-connect
            {{- range .Values.metrics.extraArgs }}
            - {{ . }}
            {{- end }}
          {{- if .Values.auth.enabled }}
          env:
            - name: MONGO_METRICS_USERNAME
              value: {{ .Values.metrics.username | default .Values.auth.rootUsername | quote }}
            - name: MONGO_METRICS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mongodb.metrics.secretName" . }}
                  key: {{ include "mongodb.secretPasswordKey" . }}
            {{- range .Values.metrics.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          {{- else }}
          env:
            {{- range .Values.metrics.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: http-metrics
              containerPort: 9216
              protocol: TCP
          {{- if .Values.metrics.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http-metrics
            initialDelaySeconds: {{ .Values.metrics.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.metrics.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.metrics.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.metrics.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.metrics.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.metrics.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http-metrics
            initialDelaySeconds: {{ .Values.metrics.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.metrics.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.metrics.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.metrics.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.metrics.readinessProbe.successThreshold }}
          {{- end }}
          resources: {{- toYaml .Values.metrics.resources | nindent 12 }}
{{- end }}
      volumes:
        {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        {{- end }}
        - name: init-scripts
          configMap:
            name: {{ include "mongodb.fullname" . }}-init-scripts
        {{- if or .Values.config.content .Values.config.existingConfigmap }}
        - name: config
          configMap:
            {{- if .Values.config.existingConfigmap }}
            name: {{ .Values.config.existingConfigmap }}
            {{- else }}
            name: {{ include "mongodb.fullname" . }}-config
            {{- end }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        {{- with .Values.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}
